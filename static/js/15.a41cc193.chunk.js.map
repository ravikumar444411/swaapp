{"version":3,"sources":["views/dashboard/Session.js","redux_containers/SessionContainer.js","redux_containers/VideoContainer.js","views/dashboard/Dashboard.js"],"names":["Session","props","state","todaysessionList","fetch","todaysessionUrl","requestOptions","then","response","json","data","setState","catch","error","console","log","className","this","length","map","list","index","to","onClick","getTodaySessionHandler","batch","title","Mytime","startDateTime","endDateTime","block","color","target","href","meetlink","variant","React","Component","connect","cardItems","dispatch","getTodaySession","playback","getVideos","getVideoHandler","Widgets","Dashboard","announcementList","announcementUrl","SessionContainer","VideoContainer","style","minHeight","height","body"],"mappings":"+QA4FeA,E,kDA9EX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,iBAAkB,IAHH,E,qDAMnB,WAAqB,IAAD,OAEdC,MAAMC,IAAiBC,KACrBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,EAAKC,SAAS,CAACR,iBAAiBO,OAChDE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,mBAAqBF,Q,oBAGlD,WAAU,IAAD,OAUX,OAAQ,mCAEN,eAAC,IAAD,WACA,cAAC,IAAD,UAAa,sBAAMG,UAAU,KAAhB,kCACX,cAAC,IAAD,UACY,wBAAOA,UAAU,qBAAjB,UACA,uBAAOA,UAAU,cAAjB,SACI,+BACE,mCACA,8CACA,0CACA,sCACA,oBAAIA,UAAU,cAAd,yBAGA,kCAEHC,KAAKf,MAAMC,iBAAiBe,OAAO,GA1B3B,+BACH,uBACA,yDACA,mCACA,uBACA,yBALY,GA6BbD,KAAKf,MAAMC,iBAAiBgB,KAAI,SAACC,EAAKC,GAAN,OAC/B,+BACA,6BAAI,8BAAOA,EAAM,MACjB,mCAAK,cAAC,IAAD,CAAMC,GAAG,qBAAT,SAA+B,qBAAKC,QAAS,kBAAI,EAAKtB,MAAMuB,uBAAuBJ,IAApD,SAA4DA,EAAKK,aACrG,6BAAI,8BAAOL,EAAKM,UAChB,6BAAK,sBAAKV,UAAU,mBAAf,UAAmCW,YAAOP,EAAKQ,eAA/C,OAAmED,YAAOP,EAAKS,kBACpF,oBAAIb,UAAU,eAAd,SACQ,eAAC,IAAD,CAAMA,UAAU,yBAAhB,UACE,cAAC,IAAD,CAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CAASc,OAAK,EAACC,MAAM,OAArB,SACE,mBAAGC,OAAO,SAASC,KAAMb,EAAKc,SAA9B,sBAIN,cAAC,IAAD,CAAOlB,UAAU,aAAjB,SACE,cAAC,IAAD,CAASc,OAAK,EAACK,QAAQ,UAAUJ,MAAM,SAAvC,6BAdDV,uB,GA9CnBe,IAAMC,W,kBCFbC,eAPO,SAAApC,GAAK,MAAG,CAC1BQ,KAAKR,EAAMqC,cAEU,SAAAC,GAAQ,MAAG,CAChChB,uBAAuB,SAAAd,GAAI,OAAE8B,EAASC,YAAgB/B,QAG3C4B,CAA4CtC,G,SCE5CsC,eAPO,SAAApC,GAAK,MAAG,CAC1BwC,SAASxC,EAAMyC,cAEM,SAAAH,GAAQ,MAAG,CAChCI,gBAAgB,SAAAlC,GAAI,OAAE8B,EAASG,YAAUjC,QAG9B4B,CAA4CO,KCJrDC,E,kDACJ,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX6C,iBAAkB,IAHH,E,qDAOnB,WAAqB,IAAD,OACjB3C,MAAM4C,IAAiB1C,KACrBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,EAAKC,SAAS,CAACoC,iBAAiBrC,OAChDE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,mBAAqBF,Q,oBAGrD,WAEE,OAAO,sBAAKG,UAAU,MAAf,UACL,sBAAKA,UAAU,mBAAf,UACA,cAACiC,EAAD,IACA,cAACC,EAAD,OAEA,qBAAKlC,UAAU,kBAAf,SACU,cAAC,IAAD,CAAOmC,MAAO,CAACC,UAAU,SAAzB,SACA,eAAC,IAAD,WACE,mBAAGpC,UAAU,wBAAb,2BAAsD,oBAAIqC,OAAO,QAChEpC,KAAKf,MAAM6C,iBAAiB5B,KAAI,SAACC,EAAKC,GAAN,OACzB,sBAAKL,UAAU,gBAAf,UACA,iCAAUI,EAAKM,QACf,4BAAIN,EAAKkC,SAF2BjC,oB,GA3BtCe,IAAMC,WAwCfS","file":"static/js/15.a41cc193.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CAlert,\r\n  CRow\r\n} from '@coreui/react'\r\nimport { Link } from 'react-router-dom'\r\nimport {requestOptions,todaysessionUrl,Mytime} from '../Config'\r\n\r\nclass Session extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        todaysessionList: [],\r\n      };\r\n    }\r\n    componentDidMount() {\r\n        \r\n          fetch(todaysessionUrl, requestOptions)\r\n           .then((response) => response.json())\r\n           .then((data) => {this.setState({todaysessionList:data})})\r\n           .catch(error => console.log(\"Error detected: \" + error))\r\n\r\n          }\r\n          render() {\r\n            const isrecord = ()=> (<tr key={0}>      \r\n                                <td></td>\r\n                                <td> No today session found</td>\r\n                                <td> </td>\r\n                                <td></td>\r\n                                <td ></td>\r\n                                </tr>);\r\n\r\n     \r\n        return  <> \r\n \r\n          <CCard>\r\n          <CCardHeader><span className=\"h3\">Your Today Session</span></CCardHeader>\r\n            <CCardBody>\r\n                        <table className=\"table table-hover \">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                              <th>#</th>\r\n                              <th>Session Name</th>\r\n                              <th>Pre read</th>\r\n                              <th>Time</th>\r\n                              <th className=\"text-center\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                              <tbody>\r\n                               \r\n                          {this.state.todaysessionList.length<1 && isrecord()}\r\n\r\n\r\n                              {this.state.todaysessionList.map((list,index) => (\r\n                                <tr key={index}>      \r\n                                <td><div >{index+1}</div></td>\r\n                                <td> <Link to=\"/dashboard/Preread\" ><div onClick={()=>this.props.getTodaySessionHandler(list)}>{list.batch}</div></Link></td>\r\n                                <td><div >{list.title}</div></td>\r\n                                <td ><div className=\"small text-muted\">{Mytime(list.startDateTime)} to {Mytime(list.endDateTime)}</div></td>\r\n                                <td className=\"text-center \">\r\n                                        <CRow className=\"align-items-center row\">\r\n                                          <CCol   className=\"mb-3 col-6\">\r\n                                            <CButton block color=\"info\">\r\n                                              <a target=\"_blank\" href={list.meetlink}>Join</a>\r\n                                            </CButton>\r\n                                        </CCol>\r\n                                         \r\n                                        <CCol  className=\"mb-3 col-6\">\r\n                                          <CButton block variant=\"outline\" color=\"danger\">Cancel</CButton>\r\n                                      </CCol>\r\n                                      </CRow>\r\n                                  </td>\r\n                                </tr>\r\n                                     ))}\r\n                              </tbody>\r\n                            </table>\r\n\r\n\r\n    \r\n            </CCardBody>\r\n          </CCard>\r\n      \r\n      </>;\r\n        }\r\n\r\n}\r\n\r\nexport default Session\r\n","import Session from '../views/dashboard/Session'\nimport {connect} from 'react-redux'\nimport {getTodaySession} from '../service/actions/actions'\n\nconst mapStateToProps=state=>({\n    data:state.cardItems\n})\nconst mapDispatchToProps=dispatch=>({\n    getTodaySessionHandler:data=>dispatch(getTodaySession(data))\n\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Session)\n// export default Home;","// import Videos from '../views/videos/Videos'\nimport Widgets from '../views/dashboard/Widgets'\n\nimport {connect} from 'react-redux'\nimport {getVideos} from '../service/actions/actions'\n\nconst mapStateToProps=state=>({\n    playback:state.getVideos\n})\nconst mapDispatchToProps=dispatch=>({\n    getVideoHandler:data=>dispatch(getVideos(data))\n\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Widgets)\n\n","import React from 'react'\nimport {\n  CCard,\n  CCardBody\n} from '@coreui/react';\nimport SessionContainer from '../../redux_containers/SessionContainer'\nimport VideoContainer from '../../redux_containers/VideoContainer'\nimport {announcementUrl,requestOptions} from '../Config'\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      announcementList: []\n    };\n  }\n\n  componentDidMount() {\n     fetch(announcementUrl, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {this.setState({announcementList:data})  })\n      .catch(error => console.log(\"Error detected: \" + error))\n  }\n\n  render() {\n\n    return <div className=\"row\">\n      <div className=\"col-12 col-md-9 \">\n      <SessionContainer />\n      <VideoContainer/>\n      </div>\n      <div className=\"col-12 col-md-3\">\n                <CCard style={{minHeight:'450px'}}>\n                <CCardBody>\n                  <p className=\"h5 font-weight-bolder\">Announcements</p><hr height=\"5px\"/>\n                  {this.state.announcementList.map((list,index) => (\n                          <div className=\"border-bottom\" key={index}>\n                          <strong >{list.title}</strong>\n                          <p>{list.body}</p>\n                          {/* <p>{list.description.substring(0,30)}...</p> */}\n                        </div>\n                      ))}\n                </CCardBody>\n              </CCard>\n      </div>\n    </div>\n  }\n}\n\nexport default Dashboard\n"],"sourceRoot":""}