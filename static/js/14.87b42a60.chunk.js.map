{"version":3,"sources":["views/calender/Calender.js"],"names":["localizer","momentLocalizer","moment","Calender","props","state","alertvisibale","studentCalenderList","todaysessionList","alertData","fetch","todaysessionUrl","requestOptions","then","response","json","data","setState","catch","error","console","log","studentCalenderUrl","eventsList","this","map","event","push","title","Date","startDateTime","toGMTString","endDateTime","meetlink","className","events","startAccessor","endAccessor","style","height","onSelectEvent","alertEvent","color","Mydate","start","Mytime","end","href","resource","alertMessage","list","index","batch","teacher","description","target","Component"],"mappings":"iSAUMA,EAAYC,YAAgBC,KAE5BC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACbC,eAAc,EACdC,oBAAoB,GACpBC,iBAAiB,GACjBC,UAAU,IANO,E,qDAUnB,WAAqB,IAAD,OAClBC,MAAMC,IAAiBC,KACtBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,EAAKC,SAAS,CAACT,iBAAiBQ,OAChDE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,mBAAqBF,MAGjDT,MAAMY,IAAoBV,KACzBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,EAAKC,SAAS,CAACV,oBAAoBS,OACnDE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,mBAAqBF,Q,oBAInD,WAAU,IAAD,OAEHI,EAAa,GAEjBC,KAAKnB,MAAME,oBAAoBkB,KAAI,SAAAC,GAC7BH,EAAWI,KAAK,CACd,MAAQD,EAAME,MACd,MAAS,IAAIC,KAAKH,EAAMI,eAAeC,cACvC,IAAO,IAAIF,KAAKH,EAAMM,aAAaD,cACnC,SAAYL,EAAMO,cA2B1B,OACE,sBAAKC,UAAU,MAAf,UACQ,sBAAKA,UAAU,mCAAf,UACI,cAAC,IAAD,CACAlC,UAAWA,EACXmC,OAAQZ,EACRa,cAAc,QACdC,YAAY,MACZC,MAAO,CAAEC,OAAQ,KACjBC,cAAe,SAACd,GACZ,EAAKT,SAAS,CACZX,eAAe,EAAKD,MAAMC,cAC1BG,UAAWiB,OAIjB,uBAdJ,IAcU,uBACLF,KAAKnB,MAAMC,eAvCN,WACnB,IAAMmC,EAAa,EAAKpC,MAAMI,UAC7B,OAAO,eAAC,IAAD,CAAQiC,MAAM,UAAd,UACN,oBAAIR,UAAU,gBAAd,SAA+BO,EAAWb,QAC1C,+CAAmBe,YAAOF,EAAWG,OAArC,IAA6C,uBAA7C,IAAqDC,YAAOJ,EAAWG,OAAvE,OAAmFC,YAAOJ,EAAWK,KAArG,OACA,8NAKA,mDACA,mBAAGC,KAAMN,EAAWO,SAApB,SAA+BP,EAAWO,WAC1C,sBACA,uBACA,mBAAGd,UAAU,OAAb,oGAyBwCe,MAIjC,qBAAKf,UAAU,kCAAf,SACKV,KAAKnB,MAAMG,iBAAiBiB,KAAI,SAACyB,EAAKC,GAAN,OAC/B,sBAAKjB,UAAU,gBAAf,UACI,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,8BAAd,SAA6CgB,EAAKE,QAClD,oBAAGlB,UAAU,mBAAb,UAAiCW,YAAOK,EAAKpB,eAA7C,OAAiEe,YAAOK,EAAKlB,gBAC7E,oBAAGE,UAAU,mBAAb,uBAA2CgB,EAAKG,WAChD,mBAAGnB,UAAU,GAAb,sBACA,oBAAGA,UAAU,YAAb,UAA0BgB,EAAKI,YAA/B,SACA,cAAC,IAAD,UACE,cAAC,IAAD,UAAM,mBAAGP,KAAMG,EAAKjB,SAAUsB,OAAO,QAAQrB,UAAU,yBAAjD,yBAIZ,yBAZkCiB,e,GApFjCK,aA4GRrD","file":"static/js/14.87b42a60.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\r\nimport {\r\n  CAlert,\r\n  CRow,\r\n  CCol\r\n} from '@coreui/react'\r\nimport {requestOptions,studentCalenderUrl, todaysessionUrl,Mydate,Mytime} from '../Config'\r\nconst localizer = momentLocalizer(moment)\r\n\r\nclass Calender extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    alertvisibale:false,\r\n    studentCalenderList:[],\r\n    todaysessionList:[],\r\n    alertData:{}\r\n  };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(todaysessionUrl, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {this.setState({todaysessionList:data})  })\r\n    .catch(error => console.log(\"Error detected: \" + error)) ;\r\n\r\n\r\n    fetch(studentCalenderUrl, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {this.setState({studentCalenderList:data})  })\r\n    .catch(error => console.log(\"Error detected: \" + error)) ;\r\n\r\n\r\n     }\r\n  render() {\r\n\r\n    var eventsList = [];\r\n\r\n    this.state.studentCalenderList.map(event=>{\r\n          eventsList.push({\r\n            'title':event.title,\r\n            'start': new Date(event.startDateTime).toGMTString(),\r\n            'end': new Date(event.endDateTime).toGMTString(),\r\n            'resource': event.meetlink,\r\n          })\r\n    })\r\n\r\n    // console.log(myEventsList)\r\n   const alertMessage = ()=>{\r\n     const alertEvent = this.state.alertData;\r\n      return <CAlert color=\"success\">\r\n       <h4 className=\"alert-heading\">{alertEvent.title}</h4>\r\n       <p>Class timing: { Mydate(alertEvent.start)} <br/> { Mytime(alertEvent.start)} to {Mytime(alertEvent.end)} </p>\r\n       <p>\r\n         Aww yeah, you successfully read this important alert message. This example text is going\r\n         to run a bit longer so that you can see how spacing within an alert works with this kind\r\n         of content.\r\n       </p>\r\n       <p>Join class to link</p>\r\n       <a href={alertEvent.resource}>{alertEvent.resource}</a>\r\n       <p></p>\r\n       <hr />\r\n       <p className=\"mb-0\">\r\n         Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n       </p>\r\n     </CAlert>\r\n    }\r\n\r\n    // console.log(this.state.todaysessionList)\r\n\r\n    return (\r\n      <div className=\"row\">\r\n              <div className=\"col-12 col-sm-9 App bg-white p-5\">\r\n                  <Calendar\r\n                  localizer={localizer}\r\n                  events={eventsList}\r\n                  startAccessor=\"start\"\r\n                  endAccessor=\"end\"\r\n                  style={{ height: 500 }}\r\n                  onSelectEvent={(event)=>{\r\n                      this.setState({\r\n                        alertvisibale:!this.state.alertvisibale,\r\n                        alertData: event\r\n                        }\r\n                        )}}\r\n                    />\r\n                  <br/> <br/> \r\n                  {this.state.alertvisibale && alertMessage()}\r\n              </div>\r\n\r\n{/* Slide today session of calender */}\r\n              <div className=\"col-12 col-sm-3 border bg-white\">\r\n                  {this.state.todaysessionList.map((list,index) => (\r\n                    <div className=\"card border-0\" key={index}>\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title font-weight-bold\">{list.batch}</h5>\r\n                          <p className=\"small text-muted\">{Mytime(list.startDateTime)} to {Mytime(list.endDateTime)}</p>\r\n                          <p className=\"font-weight-bold\">Faculty : {list.teacher}</p>\r\n                          <p className=\"\">Details:</p>\r\n                          <p className=\"card-text\">{list.description}...</p>\r\n                          <CRow>\r\n                            <CCol><a href={list.meetlink} target=\"blank\" className=\"btn btn-info card-link\">Join</a></CCol>\r\n                            {/* <CCol>  <Edit_session sessionData={list}/></CCol> */}\r\n                          </CRow>\r\n                        </div>\r\n                      <hr/>\r\n                    </div>\r\n                      ))}\r\n              </div>\r\n\r\n\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calender;"],"sourceRoot":""}